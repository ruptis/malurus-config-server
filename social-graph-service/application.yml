server:
  port: 8083

spring:
  application:
    name: social-graph-service
  datasource:
    url: jdbc:postgresql://postgres-social-graph-service:5433/social-graph-service
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      cluster:
        nodes: redis-0:6379,redis-1:6379,redis-2:6379,redis-3:6379,redis-4:6379,redis-5:6379
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: timeline_kafka_consumer_group_id

springdoc:
  api-docs:
    path: /social-graph-service/api-docs

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
